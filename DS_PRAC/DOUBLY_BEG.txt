#include <stdio.h>
#include <stdlib.h>
struct node
{
    int info;
    struct node *prev, *next;
};
struct node *start = NULL;
void traverse()
{
    if (start == NULL)
    {
        printf("\nList is empty\n");
        return;
    }
    struct node *temp;
    temp = start;
    while (temp != NULL)
    {
        printf("Data = %d\n", temp->info);
        temp = temp->next;
    }
}
void insertAtFront()
{
    int data;
    struct node *temp;
    temp = (struct node *)malloc(sizeof(struct node));
    printf("\nEnter number to be inserted: ");
    scanf("%d", &data);
    temp->info = data;
    temp->prev = NULL;
    temp->next = start;
    start = temp;
}

void deleteFirst()
{
    struct node *temp;
    if (start == NULL)
        printf("\nList is empty\n");
    else
    {
        temp = start;
        start = start->next;
        if (start != NULL)
            start->prev = NULL;
        free(temp);
    }
}

int main()
{
    int choice;
    while (1)
    {
        printf("\n\t1 To see list\n");
        printf("\t2 For insertion at  starting\n");

        printf("\t3 For deletion of  first element\n");

        printf("\t4 To exit\n");
        printf("\nEnter Choice :\n");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            traverse();
            break;
        case 2:
            insertAtFront();
            break;
        case 3:
            deleteFirst();
            break;
        case 4:
            exit(1);
            break;
        default:
            printf("Incorrect Choice. Try Again \n");
            continue;
        }
    }
    return 0;
}